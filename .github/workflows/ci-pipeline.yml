name: CI Pipeline

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache poetry and pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-pip-${{ matrix.python-version || '3.12' }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-pip-

      - name: Install Poetry
        run: python -m pip install --upgrade pip && pip install poetry==1.8.0

      - name: Configure Poetry & Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-ansi --with dev

      - name: Run Ruff (linting)
        run: poetry run ruff check .

      - name: Run Ruff (formatting)
        run: poetry run ruff format --check .

      - name: Run isort (import sorting)
        run: poetry run isort . --check-only --diff

      - name: Run mypy (type checking)
        run: poetry run mypy productivity_tracker

      - name: Run bandit (security)
        run: poetry run bandit -r productivity_tracker -ll

      - name: Check dependencies (safety)
        run: poetry run safety check

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: quality

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_productivity_tracker
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache poetry and pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-pip-${{ matrix.python-version || '3.12' }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-pip-

      - name: Install Poetry
        run: python -m pip install --upgrade pip && pip install poetry==1.8.0

      - name: Configure Poetry & Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-ansi --with dev

      - name: Run tests with coverage
        env:
          TEST_DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_productivity_tracker
        run: make test-ci-full

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
