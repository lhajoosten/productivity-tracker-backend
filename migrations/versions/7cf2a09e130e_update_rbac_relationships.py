"""update_rbac_relationships

Revision ID: 7cf2a09e130e
Revises: 5dcde89b668f
Create Date: 2025-10-13 20:23:36.557393

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7cf2a09e130e"
down_revision: Union[str, Sequence[str], None] = "5dcde89b668f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("role_permissions_role_id_fkey"), "role_permissions", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("role_permissions_permission_id_fkey"),
        "role_permissions",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "role_permissions", "roles", ["role_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None,
        "role_permissions",
        "permissions",
        ["permission_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        op.f("user_roles_user_id_fkey"), "user_roles", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("user_roles_role_id_fkey"), "user_roles", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "user_roles", "roles", ["role_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "user_roles", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user_roles", type_="foreignkey")
    op.drop_constraint(None, "user_roles", type_="foreignkey")
    op.create_foreign_key(
        op.f("user_roles_role_id_fkey"), "user_roles", "roles", ["role_id"], ["id"]
    )
    op.create_foreign_key(
        op.f("user_roles_user_id_fkey"), "user_roles", "users", ["user_id"], ["id"]
    )
    op.drop_constraint(None, "role_permissions", type_="foreignkey")
    op.drop_constraint(None, "role_permissions", type_="foreignkey")
    op.create_foreign_key(
        op.f("role_permissions_permission_id_fkey"),
        "role_permissions",
        "permissions",
        ["permission_id"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("role_permissions_role_id_fkey"),
        "role_permissions",
        "roles",
        ["role_id"],
        ["id"],
    )
    # ### end Alembic commands ###
